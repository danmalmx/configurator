// <auto-generated />
using ConfigThis.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ConfigThis.Migrations
{
    [DbContext(typeof(ConfigContext))]
    [Migration("20190102201555_ScaffoldDatabase")]
    partial class ScaffoldDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ConfigThis.Models.DisallowedParameter", b =>
                {
                    b.Property<int>("ObjectId")
                        .HasColumnName("OBJECT_ID");

                    b.Property<int>("DisallowedRuleId")
                        .HasColumnName("DISALLOWED_RULE_ID");

                    b.Property<int>("ParameterId")
                        .HasColumnName("PARAMETER_ID");

                    b.HasKey("ObjectId");

                    b.ToTable("DISALLOWED_PARAMETER");
                });

            modelBuilder.Entity("ConfigThis.Models.DisallowedRule", b =>
                {
                    b.Property<int>("ObjectId")
                        .HasColumnName("OBJECT_ID");

                    b.Property<string>("Name")
                        .HasColumnName("NAME")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("ObjectId");

                    b.ToTable("DISALLOWED_RULE");
                });

            modelBuilder.Entity("ConfigThis.Models.DisallowedValue", b =>
                {
                    b.Property<int>("ObjectId")
                        .HasColumnName("OBJECT_ID");

                    b.Property<int>("DisallowedParameterId")
                        .HasColumnName("DISALLOWED_PARAMETER_ID");

                    b.Property<int>("ParameterValueId")
                        .HasColumnName("PARAMETER_VALUE_ID");

                    b.HasKey("ObjectId");

                    b.ToTable("DISALLOWED_VALUE");
                });

            modelBuilder.Entity("ConfigThis.Models.Parameter", b =>
                {
                    b.Property<int>("ObjectId")
                        .HasColumnName("OBJECT_ID");

                    b.Property<string>("Name")
                        .HasColumnName("NAME")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("ProductId")
                        .HasColumnName("PRODUCT_ID");

                    b.HasKey("ObjectId");

                    b.ToTable("PARAMETER");
                });

            modelBuilder.Entity("ConfigThis.Models.ParameterValue", b =>
                {
                    b.Property<int>("ObjectId")
                        .HasColumnName("OBJECT_ID");

                    b.Property<string>("Name")
                        .HasColumnName("NAME")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("ParameterId")
                        .HasColumnName("PARAMETER_ID");

                    b.HasKey("ObjectId");

                    b.ToTable("PARAMETER_VALUE");
                });

            modelBuilder.Entity("ConfigThis.Models.Product", b =>
                {
                    b.Property<int>("ObjectId")
                        .HasColumnName("OBJECT_ID");

                    b.Property<string>("Name")
                        .HasColumnName("NAME")
                        .HasMaxLength(50);

                    b.HasKey("ObjectId");

                    b.ToTable("PRODUCT");
                });
#pragma warning restore 612, 618
        }
    }
}
